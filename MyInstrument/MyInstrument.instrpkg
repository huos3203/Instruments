<?xml version="1.0" encoding="UTF-8" ?>
<package>
	<id>hsg.com.cn.MyInstrument</id>
	<title>MyInstrument</title>
	<owner>
		<name>admin</name>
	</owner>
    <!--导入自定义的tick表格-->
    <import-schema>tick</import-schema>
    
    <!--自定义Instruments的表格-->
    <instrument>
        <id>hsg.lib.MyInstrument</id>
        <title>Ticks</title>
        <category>Behavior</category>
        <purpose>Instrument 每隔10s绘制</purpose>
        <icon>Generic</icon>
        
        <create-table>
            <id>tick-table</id>
            <schema-ref>tick</schema-ref>
        </create-table>
        
        <!--图形工具-->
        <graph>
            <title>Ticks</title>
            <lane> <!--跟踪通道-->
                <title>Ticks</title>
                <table-ref>tick-table</table-ref>
                <!-- 使用plot, plot-template or histogram elements -->
                <!--指定通道绘制的内容-->
                <plot>
                    <value-from>time</value-from>
                </plot>
            </lane>
        </graph>
        <!--列表工具-->
        <list>
            <title>Ticks</title>
            <table-ref>tick-table</table-ref>
            <column>time</column>
        </list>
        <!-- Define graph to draw for your Instrument (optional) -->
        
        <!-- Define at least one detail view for your Instrument -->
    </instrument>
    <!-- Instruments Developer Help: https://help.apple.com/instruments/developer/mac/current/ -->
    
    <!-- MARK: Schema Definitions -->
    <!-- Define point and interval schemas needed to represent the input and output tables your package will use. -->
    <!-- Two kinds are available: schemas with automatically generated modelers, and schemas that require custom modelers -->
    <!--   Generated modelers: 'os-log-point-schema', 'os-signpost-interval-schema', 'ktrace-point-schema', 'ktrace-interval-schema' -->
    <!--   Custom modeler required: 'point-schema', 'interval-schema' -->
    <!-- To use existing schemas from other packages, declare 'import-schema' elements -->

    <!-- MARK: Modeler Declarations -->
    <!-- If there are schemas defined that require a custom modeler, each can be declared with a 'modeler' element -->
    <!-- Modelers are based on CLIPS rules and may define 1..n output schemas, each requiring 1..n input schemas -->

    <!-- MARK: Instrument Definitions -->
    <!-- Instruments record and display data, creating concrete table requirements that instance modelers and data streams. -->
    <!-- Any number of 'instrument' elements can be defined; each instrument should provide a cohesive graph and detail experience. -->

    <!-- MARK: Embed Templates -->
    <!-- Templates may be included and represent a collection of tools configured for a specific tracing workflow -->
    <!-- Each 'template' element specifies the relative path to a .tracetemplate file in the project -->
    <!-- To create a template: start with a blank document, configure with instruments desired, and choose "File -> Save as Template" -->
</package>
